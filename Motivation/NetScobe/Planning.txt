### DSA :-
1. Minimum jumps 
2. write code for check BT is BST ??
3. wite condition for palingdrome 
4. write the Robin Carp code {Stream palingdrome}

### System design :-



### Backend :-
1. node Js {Basics} {DONE and Practiced some API, Promise and  }
2. Mysql 
3. MongoDB 
4. Interview Question on Backend :- 
    1. https://procoders.tech/blog/back-end-engineer-interview-questions/
    2. https://www.fullstack.cafe/blog/backend-developer-interview-questions
    3. https://youtu.be/7npkRw7gMRA


### FrontEnd :-

Theory :- 
HTML 
Javascript :- Javascript pattern , clouser , Promises , protypes , callback , pure function , setTimeOut , curring ,array methos 
        ### {So much practice over : (String, Array , Json, object ) functions }
css (Media Query, bootstrap):- Preprocessor , psudo class , flex 
        ### {So much practice over : (Saas , less , dynamic css) functions }
TypeScript
    Theory :- what ? Interface , 
    Practicle:- 
Jest
    Theory :-
    Practicle:- 


React Redux Hooks

    Implicit Explicit Binding ?? Arrow function ?
    what is contaxt ? 
    diference between saga and thunk ??
    ittrator and generator ?? async await , promise , yield and next ?
        Theory :-
        Practicle:- 
    Fetch and Axios ?? 
         Theory :-
        Practicle:- 
    why we have to use general normal Javascript function over Arrow Function ??
    useStrict ??
    Pure Componanat ??
    Server Side Rendering ?
    Lesy Loading React Suspence ?

     ### {So much practice over : 
        1. Webpack 
        2. Microfrontend {FederationPlugin}
        3. Style {Saas,Less, Mixin,myComp.style.js}
        4. How To Increase the performance of React App 
        5. how to bundle except Webpack , is there any way {esbuild}
    }

Practicle :-
1. useIffects 
    1. no parameter , {Always it will be called }
    2. [], {componanatDidMount}
    3. [count], {Third Render , ComponanatWillReciveProp}
    4. [count] with return {componanatUnmount}
2. UseMemo , 
3. UseCallback , 
4. React.memo 
2. custom HigherOrder Componanat 
3. Custom Pure Componanat 
4. React Router (From the Screch Router Switch code)
