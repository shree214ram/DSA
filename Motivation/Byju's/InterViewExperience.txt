/*
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109
*/


//javascript 
//console.log('Hello World');

//1. 2 variable and compare one by one once diff greater than mod  1 switch order  
//2. but there is unsorted array 
//3. the diff we  

function functionForCollectconsecutiveOrder(givenArray) {
    const A = givenArray;
    const orderedArrayForPositive = new Set();
    const orderedArrayForNagative = new Set();
    const sumOfNegative = 0;
    const sumOfPositive = 0;
    for (let i = 0; i < givenArray.length; i++) {
        if(A[i]<0){
            if(orderedArrayForNagative.get(A[i]+1)){
                sumOfNegative++
            }
            orderedArrayForPositive.set(A[i]*(-1))
        }else{
            if(orderedArrayForNagative.get((A[i]-1))){
                sumOfPositive++
            }
            orderedArrayForPositive.set(A[i])
        }
    }
    if(sumOfNegative>sumOfPositive){
        console.log("Biggest Length of consecutive number is => ",sumOfNegative)
    }else{
        console.log("Biggest Length of consecutive number is => ",sumOfPositive)
    }
}

const givenArray = [100, 4, 200, 1, 3, 2];
functionForCollectconsecutiveOrder(givenArray)

//Book My Ticket , Make My trip 

// Searching and Booking , AVailibity and Date 

// HLD 

// LLD 

// ("123", "Delhi" "15-18 Aug")

// Location(id,coutry,city,Area,) ,
// Hotel Table (hotelid, hotalname, locationId) 
//Room(id, type,ac, booked,) , 

//RoomBooked (1,123,2,1234567,)(id,location_id,hotel_id,room_id,type,)

// //

selct * from 


